include:
  - project: SocialGouv/gitlab-ci-yml
    file: /base_semantic_release_stage.yml
    ref: v17.19.0
  - project: SocialGouv/gitlab-ci-yml
    file: /base_register_stage.yml
    ref: v17.19.0
  - project: SocialGouv/gitlab-ci-yml
    file: /base_kaniko_stage.yml
    ref: v20.4.0
  #
  - /azure-cli/.gitlab-ci.yml
  - /azure-db/.gitlab-ci.yml
  - /bats/.gitlab-ci.yml
  - /curl/.gitlab-ci.yml
  - /fluentd-modsecurity/.gitlab-ci.yml
  - /git-deploy/.gitlab-ci.yml
  - /git-tag-release/.gitlab-ci.yml
  - /helm/.gitlab-ci.yml
  - /infra-ansible-ci/.gitlab-ci.yml
  - /k8s-ns-killer/.gitlab-ci.yml
  - /k8s-object-cleaner/.gitlab-ci.yml
  - /kosko/.gitlab-ci.yml
  - /kubectl/.gitlab-ci.yml
  - /nginx4spa/.gitlab-ci.yml
  - /pg-cleaner/.gitlab-ci.yml
  - /puppeteer/.gitlab-ci.yml
  - /puppeteer-mongo-pg/.gitlab-ci.yml
  - /trivy/.gitlab-ci.yml
  - /wait-for-postgres/.gitlab-ci.yml
  - /wait-for-http/.gitlab-ci.yml

#

workflow:
  rules:
    # Skip GitHub pull requests pipelines
    - if: $CI_PIPELINE_SOURCE == 'external_pull_request_event'
      when: never
    # Otherwise include the job and set to run normally
    - when: always

#

variables:
  # CI variables
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  GIT_STRATEGY: fetch

stages:
  - "Quality"
  - "Build"
  - "Test"
  - "Release"
  - "Publish"

#

.base_register_stage:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$HARBOR_REGISTRY\":{\"username\":\"$HARBOR_USERNAME\",\"password\":\"$HARBOR_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
      else
        export TAG=$CI_COMMIT_REF_SLUG
      fi
      if [[ "${CONTEXT}" == "." ]]; then
        export KANIKO_CONTEXT=$PWD
      elif [[ -n "${CONTEXT}" ]]; then
        export KANIKO_CONTEXT=$PWD/$CONTEXT
      else
        export KANIKO_CONTEXT=$PWD
      fi
    - |
      echo "*******************************************************************"
      echo Build docker image and publish to ${HARBOR_REGISTRY}
      echo Context ${KANIKO_CONTEXT}
      echo Build args ${DOCKER_BUILD_ARGS}
      echo Harbor registry ${HARBOR_REGISTRY}
      echo Publish to ${HARBOR_PROJECT}/${IMAGE_NAME}:${CI_COMMIT_SHA}
      echo Publish to ${HARBOR_PROJECT}/${IMAGE_NAME}:${TAG}
      echo "*******************************************************************"
    - /kaniko/executor
      --verbosity info
      --cache=true
      --context dir:///${KANIKO_CONTEXT}
      --destination ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${IMAGE_NAME}:${CI_COMMIT_SHA}
      --destination ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${IMAGE_NAME}:${TAG}
      $DOCKER_BUILD_ARGS
    - |
      echo "*******************************************************************"
      echo ðŸ“¦ ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${IMAGE_NAME}:${CI_COMMIT_SHA}
      echo ðŸ“¦ ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${IMAGE_NAME}:${TAG}
      echo "*******************************************************************"

Release:
  extends: .base_semantic_release_stage
  when: null
  variables:
    SEMANTIC_RELEASE_PLUGINS: "@semantic-release/changelog @semantic-release/exec @semantic-release/git"

#

.base_publish_to_github_stage:
  stage: "Publish"
  image: docker:19
  services:
    - docker:19-dind
  rules:
    - if: "$CI_COMMIT_TAG"
  script:
    # NOTE(douglasduteil): only run on tags
    # We should only publish tags on GitHub.
    # This guard is a safty net in cases one override the above rules and forgot to extend it
    - "[[ -z ${CI_COMMIT_TAG} ]] && exit ${CI_JOB_SKIP_EXIT_CODE:-0}"

    - echo "${GITHUB_REGISTRY_TOKEN}" | docker login docker.pkg.github.com -u SocialGroovyBot --password-stdin
    - export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
    - docker pull ${CI_REGISTRY}/${IMAGE_NAME}:${TAG}
    - docker tag ${CI_REGISTRY}/${IMAGE_NAME}:${TAG} docker.pkg.github.com/${IMAGE_NAME}:${TAG}
    - docker push docker.pkg.github.com/${IMAGE_NAME}:${TAG}

.base_register_to_gitlab_stage:
  extends: .base_register_stage
